import { Web3FunctionParams, Web3FunctionUserArgs, Web3FunctionUserArgsSchema, ModuleArgsParams, ModuleData, ResolverParams, TimeParams } from "../types";
export declare class GelatoOpsModule {
    encodeModuleArgs: (moduleArgsParams: Partial<ModuleArgsParams>) => Promise<ModuleData>;
    decodeModuleArgs: (moduleData: ModuleData) => Promise<ModuleArgsParams>;
    encodeResolverArgs: (resolverAddress: string, resolverData: string) => string;
    decodeResolverArgs: (encodedModuleArgs: string) => ResolverParams;
    encodeTimeArgs: (startTime: number, interval: number) => string;
    decodeTimeArgs: (encodedModuleArgs: string) => TimeParams;
    encodeWeb3FunctionArgs: (web3FunctionHash: string, web3FunctionArgs?: Web3FunctionUserArgs | undefined, web3FunctionArgsHex?: string | undefined) => Promise<string>;
    decodeWeb3FunctionArgs: (encodedModuleArgs: string) => Promise<Web3FunctionParams>;
    decodeWeb3FunctionArgsHex: (web3FunctionArgsHex: string, schema: {
        web3FunctionHash?: string;
        userArgsSchema?: Web3FunctionUserArgsSchema;
    }) => Promise<Web3FunctionUserArgs | null>;
    _hexToBuffer: (hexString: string) => Uint8Array;
    _bufferToHex: (buffer: Uint8Array) => string;
    private getAbiTypesAndKeysFromSchema;
}
